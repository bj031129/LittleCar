C51 COMPILER V9.51   ADXL345                                                               09/06/2024 11:59:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE ADXL345
OBJECT MODULE PLACED IN ADXL345.OBJ
COMPILER INVOKED BY: D:\Program_Files\my_serial\C51\BIN\C51.EXE ADXL345.c BROWSE INCDIR(..\inc) DEBUG OBJECTEXTEND TABS(
                    -2)

line level    source

   1          /******************************
   2          ****ADXL345读写操作.c文件******
   3          ******************************/
   4          #include "ADXL345.h"
   5          //#include "Delay.h"
   6          //#include "LED.h"
   7          uint Buffer[8];
   8          
   9          void Delay(unsigned int k)  
  10          {           
  11   1      uint i,j;       
  12   1      for(i=0;i<k;i++)
  13   1      {     
  14   2      for(j=0;j<121;j++)      
  15   2      {;}}            
  16   1      }
  17          
  18          void Delay5us()   //@11.0592MHz
  19          {
  20   1        unsigned char i;
  21   1      
  22   1        _nop_();
  23   1        i = 11;
  24   1        while (--i);
  25   1      }
  26          
  27          void ADXL345_Start()
  28          {
  29   1          SDA = 1;                    //拉高数据线
  30   1          SCL = 1;                    //拉高时钟线
  31   1          Delay5us();                 //延时
  32   1          SDA = 0;                    //产生下降沿
  33   1          Delay5us();                 //延时
  34   1          SCL = 0;                    //拉低时钟线
  35   1      }
  36          
  37          void ADXL345_Stop()
  38          {
  39   1          SDA = 0;                    //拉低数据线
  40   1          SCL = 1;                    //拉高时钟线
  41   1          Delay5us();                 //延时
  42   1          SDA = 1;                    //产生上升沿
  43   1          Delay5us();                 //延时
  44   1      }
  45          
  46          void ADXL345_SendACK(bit ack)
  47          {
  48   1          SDA = ack;                  //写应答信号
  49   1          SCL = 1;                    //拉高时钟线
  50   1          Delay5us();                 //延时
  51   1          SCL = 0;                    //拉低时钟线
  52   1          Delay5us();                 //延时
  53   1      }
  54          
C51 COMPILER V9.51   ADXL345                                                               09/06/2024 11:59:37 PAGE 2   

  55          bit ADXL345_RecvACK()
  56          {
  57   1          SCL = 1;                    //拉高时钟线
  58   1          Delay5us();                 //延时
  59   1          CY = SDA;                   //读应答信号
  60   1          SCL = 0;                    //拉低时钟线
  61   1          Delay5us();                 //延时
  62   1      
  63   1          return CY;
  64   1      }
  65          
  66          void ADXL345_SendByte(uchar dat)
  67          {
  68   1          uchar i;
  69   1        for (i=0; i<8; i++)         //8位计数器
  70   1          {
  71   2              dat <<= 1;              //移出数据的最高位
  72   2              SDA = CY;               //送数据口
  73   2              SCL = 1;                //拉高时钟线
  74   2              Delay5us();             //延时
  75   2              SCL = 0;                //拉低时钟线
  76   2              Delay5us();             //延时
  77   2          }
  78   1          ADXL345_RecvACK();
  79   1      }
  80          
  81          uchar ADXL345_RecvByte()
  82          {
  83   1          uchar i;
  84   1          uchar dat = 0;
  85   1      
  86   1          SDA = 1;                    //使能内部上拉,准备读取数据,
  87   1          for (i=0; i<8; i++)         //8位计数器
  88   1          {
  89   2              dat <<= 1;
  90   2              SCL = 1;                //拉高时钟线
  91   2              Delay5us();             //延时
  92   2              dat |= SDA;             //读数据               
  93   2              SCL = 0;                //拉低时钟线
  94   2              Delay5us();             //延时
  95   2          }
  96   1          return dat;
  97   1      }
  98          
  99          void Single_Write_ADXL345(uchar REG_Address,uchar REG_data)
 100          {
 101   1          ADXL345_Start();                  //起始信号
 102   1          ADXL345_SendByte(SlaveAddress);   //发送设备地址+写信号
 103   1          ADXL345_SendByte(REG_Address);    //内部寄存器地址，请参考中文pdf22页 
 104   1          ADXL345_SendByte(REG_data);       //内部寄存器数据，请参考中文pdf22页 
 105   1          ADXL345_Stop();                   //发送停止信号
 106   1      }
 107          
 108          uchar Single_Read_ADXL345(uchar REG_Address)
 109          {  uchar REG_data;
 110   1          ADXL345_Start();                          //起始信号
 111   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 112   1          ADXL345_SendByte(REG_Address);                   //发送存储单元地址，从0开始  
 113   1          ADXL345_Start();                          //起始信号
 114   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 115   1          REG_data=ADXL345_RecvByte();              //读出寄存器数据
 116   1        ADXL345_SendACK(1);   
C51 COMPILER V9.51   ADXL345                                                               09/06/2024 11:59:37 PAGE 3   

 117   1        ADXL345_Stop();                           //停止信号
 118   1          return REG_data; 
 119   1      }
 120          void Init_ADXL345()
 121          {
 122   1         Single_Write_ADXL345(0x31,0x0B);   //测量范围,正负16g，13位模式
 123   1         Single_Write_ADXL345(0x2C,0x0a);   //速率设定为12.5 参考pdf13页
 124   1         Single_Write_ADXL345(0x2D,0x08);   //选择电源模式   参考pdf24页
 125   1         Single_Write_ADXL345(0x2E,0x80);   //使能 DATA_READY 中断
 126   1      }
 127          void Multiple_Read_ADXL345(void)
 128          {  
 129   1        uchar i;
 130   1          ADXL345_Start();                          //起始信号
 131   1          ADXL345_SendByte(SlaveAddress);           //发送设备地址+写信号
 132   1          ADXL345_SendByte(0x32);                   //发送存储单元地址，从0x32开始  
 133   1          ADXL345_Start();                          //起始信号
 134   1          ADXL345_SendByte(SlaveAddress+1);         //发送设备地址+读信号
 135   1        for (i=0; i<6; i++)                      //连续读取6个地址数据，存储中BUF
 136   1          {
 137   2              Buffer[i] = ADXL345_RecvByte();          //BUF[0]存储0x32地址中的数据
 138   2              if (i == 5)
 139   2              {
 140   3                 ADXL345_SendACK(1);                //最后一个数据需要回NOACK
 141   3              }
 142   2              else
 143   2              {
 144   3                ADXL345_SendACK(0);                //回应ACK
 145   3             }
 146   2         }
 147   1          ADXL345_Stop();                          //停止信号
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    289    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
