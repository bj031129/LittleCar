C51 COMPILER V9.51   ADXL345_FUNC                                                          09/06/2024 11:59:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE ADXL345_FUNC
OBJECT MODULE PLACED IN ADXL345_Func.OBJ
COMPILER INVOKED BY: D:\Program_Files\my_serial\C51\BIN\C51.EXE ADXL345_Func.c BROWSE INCDIR(..\inc) DEBUG OBJECTEXTEND 
                    -TABS(2)

line level    source

   1          /**********************************
   2          ****ADXL345相关数据处理.c文件******
   3          **********************************/
   4          #include "ADXL345_Func.h"
   5          #include <math.h>
   6          xdata uchar standard_Collect_ADXL345_Num[3]={30,20,10};
   7          xdata uchar geY=0,geX=0,shiY=0,shiX=0,geZ=0,shiZ=0;//显示变量uchar(X,Y,Z轴倾斜角的高地位值 )
   8          xdata int x0g[2],y0g[2],z0g[2],x1g,y1g,z1g;//校准时的基准值;
   9          xdata int offX=0,offY=0,offZ=0;//初始偏移值
  10          xdata double factorX=0,factorY=0,factorZ=0;//重力因子
  11          xdata int dataX=0,dataY=0,dataZ=0;  //处理后的x，y，z重力加速度寄存器值
  12          xdata uint sumY_acc=0,sumX_acc=0,sumZ_acc=0;//x，y，z重力加速度寄存器值的累加和(加速度使用)
  13          xdata uint sumY_angle=0,sumX_angle=0,sumZ_angle=0;//x，y，z重力加速度寄存器值的累加和（角度使用）
  14          xdata double angleX=0,angleY=0,angleZ=0;//最后计算出的x，y，z轴角度值
  15          xdata int real_Collect_ADXL345_Num=0;//x，y，z轴加速度寄存器值得累加次数
  16          xdata int speed=0;
  17          xdata uchar ready=0,readyX=0,readyY=0,readyZ=0;
  18          xdata uchar collectFlag=0;
  19          xdata uchar geY_a,geX_a,shiY_a,shiX_a,geZ_a,shiZ_a;//X,Y,Z平均加速度的高地位值 
  20          xdata double angleX_f=0,angleY_f=0,angleZ_f=0;//计算后可供使用的角度值
  21          xdata uint accX_f=0,accY_f=0,accZ_f=0;//计算后可供使用的加速度值
  22          
  23          void Get_X()
  24          {   
  25   1        int dis_data;
  26   1          dis_data=((Buffer[1]<<8)+Buffer[0])-offX;  //合成数据   
  27   1        if(dis_data<0)
  28   1          dis_data=-dis_data;
  29   1          dataX=dis_data;     
  30   1      }
  31          
  32          
  33          void Get_Y()
  34          {   
  35   1        int dis_data;  
  36   1          dis_data=((Buffer[3]<<8)+Buffer[2])-offY;  //合成数据   
  37   1        if(dis_data<0)
  38   1          dis_data=-dis_data;
  39   1        dataY=dis_data;
  40   1      }
  41          
  42          
  43          void Get_Z()
  44          {     
  45   1        int dis_data;
  46   1          dis_data=((Buffer[5]<<8)+Buffer[4])-offZ;    //合成数据   
  47   1        if(dis_data<0)
  48   1          dis_data=-dis_data;
  49   1          dataZ=dis_data;
  50   1      }
  51          
  52          void Cal_XYZ()
  53          {
  54   1        double temp_y,temp_x,temp_z;
C51 COMPILER V9.51   ADXL345_FUNC                                                          09/06/2024 11:59:37 PAGE 2   

  55   1        temp_x=((double)sumX_angle)/standard_Collect_ADXL345_Num[speed]*factorX;
  56   1        temp_y=((double)sumY_angle)/standard_Collect_ADXL345_Num[speed]*factorY;
  57   1        temp_z=((double)sumZ_angle)/standard_Collect_ADXL345_Num[speed]*factorZ;
  58   1        angleX=(double)(acos((double)((temp_x/(sqrt(temp_x*temp_x+temp_y*temp_y+temp_z*temp_z)))))*180/3.14159265
             -); //X轴角度值
  59   1        angleY=(double)(acos((double)((temp_y/(sqrt(temp_x*temp_x+temp_y*temp_y+temp_z*temp_z)))))*180/3.14159265
             -);  //Y轴角度值
  60   1        angleZ=(double)(acos((double)((temp_z/(sqrt(temp_x*temp_x+temp_y*temp_y+temp_z*temp_z)))))*180/3.14159265
             -);  //y轴角度值 
  61   1      }
  62          void ACC_XYZ(int flag)
  63          {  
  64   1        Get_X();
  65   1        Get_Y();
  66   1        Get_Z();
  67   1        sumX_acc+=dataX;
  68   1        sumY_acc+=dataY;
  69   1        sumZ_acc+=dataZ;
  70   1        
  71   1        sumX_angle+=dataX;
  72   1        sumY_angle+=dataY;
  73   1        sumZ_angle+=dataZ;
  74   1        real_Collect_ADXL345_Num++;
  75   1          if(real_Collect_ADXL345_Num==standard_Collect_ADXL345_Num[speed])
  76   1        {
  77   2          if(flag==0)
  78   2          {
  79   3            sumX_acc=sumX_acc/standard_Collect_ADXL345_Num[speed]%256;
  80   3            sumY_acc=sumY_acc/standard_Collect_ADXL345_Num[speed]%256;
  81   3            sumZ_acc=sumZ_acc/standard_Collect_ADXL345_Num[speed]%256;
  82   3            shiX_a=sumX_acc/16;
  83   3            geX_a=sumX_acc%16;
  84   3            shiY_a=sumY_acc/16;
  85   3            geY_a=sumY_acc%16;
  86   3            shiZ_a=sumZ_acc/16;
  87   3            geZ_a=sumZ_acc%16;
  88   3      
  89   3          }
  90   2          if(flag==1)
  91   2          {
  92   3            int tempx,tempy,tempz;
  93   3            Cal_XYZ();
  94   3            tempx=90-(((int)(angleX*10))/10);
  95   3            tempy=90-(((int)(angleY*10))/10);
  96   3            tempz=90-(((int)(angleZ*10))/10);
  97   3            shiX=tempx/10;
  98   3            geX=tempx%10;
  99   3            shiY=tempy/10;
 100   3            geY=tempy%10;
 101   3            shiZ=tempz/10;
 102   3            geZ=tempz%10;   
 103   3          }
 104   2          //算加速度和角度
 105   2            if(flag==2)
 106   2          { 
 107   3            //加速度
 108   3            int tempx,tempy,tempz;
 109   3            sumX_acc=sumX_acc/standard_Collect_ADXL345_Num[speed]%256;
 110   3            sumY_acc=sumY_acc/standard_Collect_ADXL345_Num[speed]%256;
 111   3            sumZ_acc=sumZ_acc/standard_Collect_ADXL345_Num[speed]%256;
 112   3            accX_f=sumX_acc;
 113   3            accY_f=sumY_acc;
C51 COMPILER V9.51   ADXL345_FUNC                                                          09/06/2024 11:59:37 PAGE 3   

 114   3            accZ_f=sumZ_acc;
 115   3            shiX_a=sumX_acc/16;
 116   3            geX_a=sumX_acc%16;
 117   3            shiY_a=sumY_acc/16;
 118   3            geY_a=sumY_acc%16;
 119   3            shiZ_a=sumZ_acc/16;
 120   3            geZ_a=sumZ_acc%16;
 121   3            //角度
 122   3            Cal_XYZ();
 123   3            tempx=90-(((int)(angleX*10))/10);
 124   3            tempy=90-(((int)(angleY*10))/10);
 125   3            tempz=90-(((int)(angleZ*10))/10);
 126   3            angleX_f=tempx;
 127   3            angleY_f=tempy;
 128   3            angleZ_f=tempz;
 129   3            shiX=tempx/10;
 130   3            geX=tempx%10;
 131   3            shiY=tempy/10;
 132   3            geY=tempy%10;
 133   3            shiZ=tempz/10;
 134   3            geZ=tempz%10;   
 135   3          }
 136   2        real_Collect_ADXL345_Num=0;
 137   2        sumX_acc=0;
 138   2        sumY_acc=0;
 139   2        sumZ_acc=0;
 140   2        
 141   2        sumX_angle=0;
 142   2        sumY_angle=0;
 143   2        sumZ_angle=0;
 144   2        }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1987    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    108    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
